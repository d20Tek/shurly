@page "/login"
@inject IAuthenticationService _authService;
@inject NavigationManager _nav;
@using D20Tek.Authentication.Individual.Client.Contracts;

<h3>Login</h3>

<div class="row my-2">
    <div class="col-md-6">
        <EditForm Model="@request" OnValidSubmit="PerformLogin">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label for="UserName">User Name</label>
                <InputText class="form-control" @bind-Value=request.UserName />
                <ValidationMessage For=@(() => request.UserName) />
            </div>
            <div class="form-group">
                <label for="Password">Password</label>
                <InputText class="form-control" type="password" @bind-Value=request.Password />
                <ValidationMessage For=@(() => request.Password) />
            </div>

            <div class="my2">
                @message
            </div>
            <div class="my2">
                <button type="submit" class="btn btn-primary">Login</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    LoginRequest request = new();
    string message = string.Empty;

    private async Task PerformLogin()
    {
        message = "Wait...";

        var response = await _authService.LoginAsync(request);
        response.MatchFirstError(
            success => _nav.NavigateTo("/"),
            error => message = error.Message);
    }
}
